{"version":3,"file":"background.js","mappings":";;;;;;;;;;;;;;AAAA,MAAMA,cAAc,CAAC;EACnBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB,IAAI,CAACC,WAAW,GAAG,KAAK;EAC1B;EAEA,MAAMC,UAAUA,CAAA,EAAG;IACjB,IAAI,IAAI,CAACD,WAAW,EAAE;IAEtB,IAAI;MACF,IAAI,CAACD,OAAO,GAAG,MAAMG,EAAE,CAACC,aAAa,CAACC,MAAM,CAAC;QAC3CC,YAAY,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;QAC/BC,WAAW,EAAE,GAAG;QAChBC,IAAI,EAAE;MACR,CAAC,CAAC;MAEF,IAAI,CAACP,WAAW,GAAG,IAAI;IACzB,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;MAC7D,MAAMA,KAAK;IACb;EACF;EAEA,MAAME,SAASA,CAACC,IAAI,EAAEC,WAAW,EAAE;IACjC,IAAI;MACF,IAAI,CAAC,IAAI,CAACZ,WAAW,EAAE,MAAM,IAAI,CAACC,UAAU,CAAC,CAAC;MAE9C,MAAMY,MAAM,GAAG,4BAA4BF,IAAI,CAACG,KAAK;AAC3D,2BAA2BC,IAAI,CAACC,SAAS,CAACJ,WAAW,CAACK,YAAY,IAAI,EAAE,CAAC;AACzE,aAAaF,IAAI,CAACC,SAAS,CAACJ,WAAW,CAACM,SAAS,IAAI,EAAE,CAAC;AACxD,gBAAgBH,IAAI,CAACC,SAAS,CAACJ,WAAW,CAACO,YAAY,IAAI,EAAE,CAAC;AAC9D;AACA,kDAAkDJ,IAAI,CAACC,SAAS,CAACL,IAAI,CAACS,aAAa,CAAC;AACpF,oEAAoE;MAE9D,MAAMC,QAAQ,GAAG,MAAM,IAAI,CAACtB,OAAO,CAACc,MAAM,CAACA,MAAM,CAAC;MAClD,OAAO,IAAI,CAACS,WAAW,CAACD,QAAQ,CAAC;IACnC,CAAC,CAAC,OAAOb,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrD,MAAMA,KAAK;IACb;EACF;EAEAc,WAAWA,CAACC,IAAI,EAAE;IAChB,MAAMC,QAAQ,GAAGD,IAAI,CAACE,KAAK,CAAC,IAAI,CAAC;IACjC,MAAMC,MAAM,GAAG;MACbC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE,EAAE;MACXC,YAAY,EAAE,EAAE;MAChBC,cAAc,EAAE,EAAE;MAClBC,eAAe,EAAE;IACnB,CAAC;IAED,IAAIC,cAAc,GAAG,EAAE;IACvBR,QAAQ,CAACS,OAAO,CAACC,IAAI,IAAI;MACvB,IAAIA,IAAI,CAACC,QAAQ,CAAC,WAAW,CAAC,EAAE;QAC9BH,cAAc,GAAG,UAAU;MAC7B,CAAC,MAAM,IAAIE,IAAI,CAACC,QAAQ,CAAC,UAAU,CAAC,EAAE;QACpCH,cAAc,GAAG,SAAS;MAC5B,CAAC,MAAM,IAAIE,IAAI,CAACC,QAAQ,CAAC,eAAe,CAAC,EAAE;QACzCH,cAAc,GAAG,cAAc;MACjC,CAAC,MAAM,IAAIE,IAAI,CAACE,IAAI,CAAC,CAAC,IAAIJ,cAAc,EAAE;QACxCN,MAAM,CAACM,cAAc,CAAC,CAACK,IAAI,CAACH,IAAI,CAACE,IAAI,CAAC,CAAC,CAAC;MAC1C;IACF,CAAC,CAAC;IAEF,OAAOV,MAAM;EACf;EAEAY,OAAOA,CAAA,EAAG;IACR,IAAI,IAAI,CAACvC,OAAO,EAAE;MAChB,IAAI,CAACA,OAAO,CAACuC,OAAO,CAAC,CAAC;MACtB,IAAI,CAACvC,OAAO,GAAG,IAAI;IACrB;IACA,IAAI,CAACC,WAAW,GAAG,KAAK;EAC1B;AACF;AAEA,iEAAe,IAAIH,cAAc,CAAC,CAAC;;;;;;UCvFnC;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACN2D;;AAE3D;AACA2C,IAAI,CAACC,SAAS,GAAIC,KAAK,IAAK;EAC1BjC,OAAO,CAACkC,GAAG,CAAC,8BAA8B,CAAC;AAC7C,CAAC;AAEDH,IAAI,CAACI,UAAU,GAAIF,KAAK,IAAK;EAC3BjC,OAAO,CAACkC,GAAG,CAAC,8BAA8B,CAAC;AAC7C,CAAC;AAED,MAAME,aAAa,CAAC;EAClB/C,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACgD,aAAa,GAAG,IAAI;IACzB,IAAI,CAACC,KAAK,GAAG,CACX;MAAEC,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAE;IAA2B,CAAC,EACrD;MAAED,IAAI,EAAE,YAAY;MAAEC,OAAO,EAAE;IAAoC,CAAC,EACpE;MAAED,IAAI,EAAE,WAAW;MAAEC,OAAO,EAAE;IAAgC,CAAC,EAC/D;MAAED,IAAI,EAAE,aAAa;MAAEC,OAAO,EAAE;IAA2B,CAAC,EAC5D;MAAED,IAAI,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAA+B,CAAC,EAC3D;MAAED,IAAI,EAAE,cAAc;MAAEC,OAAO,EAAE;IAAsC,CAAC,EACxE;MAAED,IAAI,EAAE,WAAW;MAAEC,OAAO,EAAE;IAAyC,CAAC,EACxE;MAAED,IAAI,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAA+B,CAAC,EAC3D;MAAED,IAAI,EAAE,SAAS;MAAEC,OAAO,EAAE;IAA8B,CAAC,EAC3D;MAAED,IAAI,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAA8B,CAAC,EAC1D;MAAED,IAAI,EAAE,aAAa;MAAEC,OAAO,EAAE;IAAgC,CAAC,EACjE;MAAED,IAAI,EAAE,iBAAiB;MAAEC,OAAO,EAAE;IAAgC,CAAC,CACtE;IACD,IAAI,CAACC,SAAS,GAAG,CAAC;IAClB,IAAI,CAACC,UAAU,CAAC,CAAC;EACnB;EAEA,MAAMA,UAAUA,CAAA,EAAG;IACjB,IAAI;MACF,MAAM;QAAEC;MAAe,CAAC,GAAG,MAAMC,MAAM,CAACC,OAAO,CAACC,KAAK,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAC3E,IAAIJ,cAAc,EAAE;QAClB,IAAI,CAACN,aAAa,GAAGM,cAAc;QACnC,IAAI,CAACF,SAAS,GAAGE,cAAc,CAACF,SAAS,IAAI,CAAC;MAChD;IACF,CAAC,CAAC,OAAO1C,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF;EAEA,MAAMiD,YAAYA,CAACC,MAAM,EAAEC,OAAO,GAAG,IAAI,EAAE;IACzC,IAAI,CAACb,aAAa,GAAG;MACnBE,IAAI,EAAE,IAAI,CAACD,KAAK,CAAC,IAAI,CAACG,SAAS,CAAC,EAAEF,IAAI,IAAI,SAAS;MACnDC,OAAO,EAAE,IAAI,CAACF,KAAK,CAAC,IAAI,CAACG,SAAS,CAAC,EAAED,OAAO,IAAI,eAAe;MAC/DU,OAAO,EAAEA,OAAO;MAChBC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACnCZ,SAAS,EAAE,IAAI,CAACA,SAAS;MACzBa,UAAU,EAAE,IAAI,CAAChB,KAAK,CAACiB;IACzB,CAAC;IAED,IAAI;MACF,MAAMX,MAAM,CAACC,OAAO,CAACC,KAAK,CAACU,GAAG,CAAC;QAAE,gBAAgB,EAAE,IAAI,CAACnB;MAAc,CAAC,CAAC;MACxE,MAAM,IAAI,CAACoB,eAAe,CAAC,CAAC;MAC5B,IAAI,CAAChB,SAAS,GAAG,CAAC,IAAI,CAACA,SAAS,GAAG,CAAC,IAAI,IAAI,CAACH,KAAK,CAACiB,MAAM;IAC3D,CAAC,CAAC,OAAOxD,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF;EAEA,MAAM0D,eAAeA,CAAA,EAAG;IACtB,IAAI,IAAI,CAACpB,aAAa,EAAE;MACtB,IAAI;QACF,MAAMO,MAAM,CAACc,OAAO,CAACC,WAAW,CAAC;UAC/BC,IAAI,EAAE,iBAAiB;UACvBX,MAAM,EAAE,IAAI,CAACZ;QACf,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOtC,KAAK,EAAE;QACdC,OAAO,CAACkC,GAAG,CAAC,gCAAgC,CAAC;MAC/C;IACF;EACF;EAEA,MAAM2B,KAAKA,CAAA,EAAG;IACZ,IAAI,CAACpB,SAAS,GAAG,CAAC;IAClB,IAAI,CAACJ,aAAa,GAAG,IAAI;IACzB,IAAI;MACF,MAAMO,MAAM,CAACC,OAAO,CAACC,KAAK,CAACgB,MAAM,CAAC,gBAAgB,CAAC;MACnD,MAAM,IAAI,CAACL,eAAe,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAO1D,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF;AACF;AAEA,MAAMgE,sBAAsB,CAAC;EAC3B1E,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACE,WAAW,GAAG,KAAK;IACxB,IAAI,CAACyE,UAAU,GAAG,IAAI;IACtB,IAAI,CAACC,kBAAkB,GAAG,KAAK;IAC/B,IAAI,CAACC,aAAa,GAAG,IAAI9B,aAAa,CAAC,CAAC;IACxC,IAAI,CAAC+B,iBAAiB,GAAG,IAAI;IAC7B,IAAI,CAACC,iBAAiB,GAAG;MACvBC,KAAK,EAAE,UAAU;MACjBC,MAAM,EAAE;IACV,CAAC;EACH;EAEA,MAAM9E,UAAUA,CAAA,EAAG;IACjB,IAAI;MACF,IAAI,IAAI,CAACD,WAAW,EAAE,OAAO,IAAI;MAEjCS,OAAO,CAACkC,GAAG,CAAC,0CAA0C,CAAC;MACvD,MAAMqC,YAAY,GAAG,MAAM9E,EAAE,CAACC,aAAa,CAAC6E,YAAY,CAAC,CAAC;MAE1D,IAAIA,YAAY,CAACC,SAAS,KAAK,IAAI,EAAE;QACnC,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;MACjD;;MAEA;MACA,IAAI,CAACnF,OAAO,GAAG,MAAMG,EAAE,CAACC,aAAa,CAACC,MAAM,CAAC;QAC3CC,YAAY,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;QAC7CC,WAAW,EAAE,GAAG;QAChBC,IAAI,EAAE;MACR,CAAC,CAAC;;MAEF;MACA,MAAMgC,mEAAc,CAACtC,UAAU,CAAC,CAAC;MAEjC,IAAI,CAACD,WAAW,GAAG,IAAI;MACvB,OAAO,IAAI;IACb,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMA,KAAK;IACb;EACF;EAEA,MAAM2E,kBAAkBA,CAACC,KAAK,EAAE;IAC9B,IAAI;MACF3E,OAAO,CAACkC,GAAG,CAAC,8BAA8B,EAAEyC,KAAK,CAAC;MAElD,MAAMC,SAAS,GAAG,4DAA4DC,kBAAkB,CAACF,KAAK,CAAC,EAAE;MACzG,MAAMG,cAAc,GAAG,MAAMC,KAAK,CAACH,SAAS,EAAE;QAC5CI,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,UAAU,EAAE,IAAI,CAACb,iBAAiB,CAACC,KAAK;UACxC,WAAW,EAAE,IAAI,CAACD,iBAAiB,CAACE,MAAM;UAC1C,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,IAAI,CAACQ,cAAc,CAACI,EAAE,EAAE;QACtB,MAAM,IAAIT,KAAK,CAAC,8BAA8BK,cAAc,CAAC7B,MAAM,EAAE,CAAC;MACxE;MAEA,MAAMkC,UAAU,GAAG,MAAML,cAAc,CAACM,IAAI,CAAC,CAAC;MAC9C,MAAMC,SAAS,GAAGF,UAAU,CAACG,OAAO,GAAG,CAAC,CAAC,IAAIH,UAAU,CAACI,MAAM,GAAG,CAAC,CAAC;MAEnE,IAAI,CAACF,SAAS,EAAE;QACdrF,OAAO,CAACkC,GAAG,CAAC,kBAAkB,CAAC;QAC/B,OAAO,IAAI;MACb;MAEA,MAAMsD,iBAAiB,GAAG,MAAMT,KAAK,CAAC,uDAAuD,EAAE;QAC7FC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,UAAU,EAAE,IAAI,CAACb,iBAAiB,CAACC,KAAK;UACxC,WAAW,EAAE,IAAI,CAACD,iBAAiB,CAACE,MAAM;UAC1C,cAAc,EAAE;QAClB,CAAC;QACDmB,IAAI,EAAEnF,IAAI,CAACC,SAAS,CAAC;UACnBoE,KAAK,EAAEU,SAAS,CAACK;QACnB,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAACF,iBAAiB,CAACN,EAAE,EAAE;QACzB,MAAM,IAAIT,KAAK,CAAC,iCAAiCe,iBAAiB,CAACvC,MAAM,EAAE,CAAC;MAC9E;MAEA,MAAM0C,aAAa,GAAG,MAAMH,iBAAiB,CAACJ,IAAI,CAAC,CAAC;MAEpD,OAAO;QACLQ,IAAI,EAAE;UACJC,IAAI,EAAER,SAAS,CAACK,SAAS;UACzBI,KAAK,EAAET,SAAS,CAACU,UAAU,IAAI,SAAS;UACxCC,OAAO,EAAE;YACPC,QAAQ,EAAEZ,SAAS,CAACa,WAAW;YAC/BC,IAAI,EAAEd,SAAS,CAACe;UAClB,CAAC;UACDC,KAAK,EAAEhB,SAAS,CAACgB,KAAK,EAAEC;QAC1B,CAAC;QACDC,YAAY,EAAE5B,KAAK;QACnB6B,SAAS,EAAEb,aAAa,CAACc,KAAK,GAAG,CAAC,CAAC,IAAI;MACzC,CAAC;IAEH,CAAC,CAAC,OAAO1G,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C,MAAMA,KAAK;IACb;EACF;EAED,MAAM2G,cAAcA,CAACC,WAAW,EAAE;IAC/B,IAAI,IAAI,CAAC1C,kBAAkB,EAAE;MAC3B,MAAM,IAAIQ,KAAK,CAAC,8BAA8B,CAAC;IACjD;IAEA,IAAI,CAACN,iBAAiB,GAAGwC,WAAW,CAACC,GAAG;IAExC,IAAI;MACF,IAAI,CAAC3C,kBAAkB,GAAG,IAAI;MAC9B,IAAI,CAACC,aAAa,CAAClB,YAAY,CAAC,MAAM,CAAC;MAEvC,IAAI,CAAC,IAAI,CAACzD,WAAW,EAAE;QACrB,MAAM,IAAI,CAACC,UAAU,CAAC,CAAC;MACzB;;MAEA;MACA,MAAM,CAAC;QAAEqH;MAAgB,CAAC,EAAEC,eAAe,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAC/DpE,MAAM,CAACC,OAAO,CAACC,KAAK,CAACC,GAAG,CAAC,iBAAiB,CAAC,EAC3C,IAAI,CAAC2B,kBAAkB,CAACiC,WAAW,CAACtG,KAAK,CAAC,CAC3C,CAAC;MAEF,IAAI,CAAC6D,aAAa,CAAClB,YAAY,CAAC,WAAW,CAAC;;MAE5C;MACA,MAAMwD,SAAS,GAAGM,eAAe,EAAEN,SAAS;MAC5C,MAAMS,kBAAkB,GAAG;QACzBC,QAAQ,EAAEV,SAAS,EAAEW,WAAW;QAChCC,OAAO,EAAEZ,SAAS,EAAEa,UAAU;QAC9BC,KAAK,EAAEd,SAAS,EAAEe,qBAAqB;QACvCC,GAAG,EAAEhB,SAAS,EAAEiB,YAAY;QAC5BC,KAAK,EAAElB,SAAS,EAAEmB,gBAAgB;QAClCC,MAAM,EAAEpB,SAAS,EAAEqB,SAAS;QAC5BC,MAAM,EAAEtB,SAAS,EAAEuB,SAAS;QAC5BC,WAAW,EAAExB,SAAS,EAAEyB,cAAc;QACtCC,SAAS,EAAE1B,SAAS,EAAE2B,YAAY;QAClCC,YAAY,EAAE5B,SAAS,EAAE6B;MAC3B,CAAC;;MAED;MACA,IAAI,CAACnE,aAAa,CAAClB,YAAY,CAAC,QAAQ,CAAC;MACzC,MAAMsF,aAAa,GAAG,MAAMxG,mEAAc,CAAC7B,SAAS,CAClD;QACEI,KAAK,EAAEsG,WAAW,CAACtG,KAAK;QACxBM,aAAa,EAAEsG;MACjB,CAAC,EACDJ,eACF,CAAC;;MAED;MACA,MAAMzG,MAAM,GAAG;AACrB;AACA,WAAWuG,WAAW,CAACtG,KAAK;AAC5B,SAASsG,WAAW,CAACb,KAAK,IAAIgB,eAAe,EAAElB,IAAI,EAAEE,KAAK;AAC1D,YAAYa,WAAW,CAAC4B,QAAQ;AAChC;AACA;AACA,cAActB,kBAAkB,CAACC,QAAQ,EAAEsB,OAAO,CAAC,CAAC,CAAC,IAAI,KAAK;AAC9D,aAAavB,kBAAkB,CAACG,OAAO,EAAEoB,OAAO,CAAC,CAAC,CAAC,IAAI,KAAK;AAC5D,mBAAmBvB,kBAAkB,CAACK,KAAK,EAAEkB,OAAO,CAAC,CAAC,CAAC,IAAI,KAAK;AAChE,eAAevB,kBAAkB,CAACO,GAAG,EAAEgB,OAAO,CAAC,CAAC,CAAC,IAAI,KAAK;AAC1D,mBAAmBvB,kBAAkB,CAACmB,YAAY,EAAEI,OAAO,CAAC,CAAC,CAAC,IAAI,KAAK;AACvE,WAAWvB,kBAAkB,CAACS,KAAK,EAAEc,OAAO,CAAC,CAAC,CAAC,IAAI,KAAK;AACxD,YAAYvB,kBAAkB,CAACW,MAAM,EAAEY,OAAO,CAAC,CAAC,CAAC,IAAI,KAAK;AAC1D,YAAYvB,kBAAkB,CAACa,MAAM,EAAEU,OAAO,CAAC,CAAC,CAAC,IAAI,KAAK;AAC1D,iBAAiBvB,kBAAkB,CAACe,WAAW,EAAEQ,OAAO,CAAC,CAAC,CAAC,IAAI,KAAK;AACpE,eAAevB,kBAAkB,CAACiB,SAAS,EAAEM,OAAO,CAAC,CAAC,CAAC,IAAI,KAAK;AAChE;AACA,4BAA4BlI,IAAI,CAACC,SAAS,CAACsG,eAAe,IAAI,CAAC,CAAC,CAAC;AACjE,mBAAmBvG,IAAI,CAACC,SAAS,CAAC+H,aAAa,CAACpH,QAAQ,IAAI,EAAE,CAAC;AAC/D;AACA,qDAAqD;MAE/C,IAAI,CAACgD,aAAa,CAAClB,YAAY,CAAC,WAAW,CAAC;MAC5C,MAAMyF,QAAQ,GAAG,MAAM,IAAI,CAACnJ,OAAO,CAACc,MAAM,CAACA,MAAM,CAAC;MAElD,IAAI,CAAC8D,aAAa,CAAClB,YAAY,CAAC,YAAY,CAAC;MAC7C,MAAM/B,MAAM,GAAG,IAAI,CAACyH,aAAa,CAACD,QAAQ,CAAC;MAE3C,MAAME,aAAa,GAAG;QACpB,GAAG1H,MAAM;QACT2H,WAAW,EAAE;UACXvI,KAAK,EAAEsG,WAAW,CAACtG,KAAK;UACxByF,KAAK,EAAEa,WAAW,CAACb,KAAK,IAAIgB,eAAe,EAAElB,IAAI,EAAEE,KAAK;UACxDyC,QAAQ,EAAE5B,WAAW,CAAC4B;QACxB,CAAC;QACD5H,aAAa,EAAEsG,kBAAkB;QACjCH,eAAe;QACf+B,cAAc,EAAEP,aAAa;QAC7BnF,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QACnCuD,GAAG,EAAE,IAAI,CAACzC;MACZ,CAAC;;MAED;MACA,MAAM,IAAI,CAAC2E,oBAAoB,CAAC;QAC9BC,OAAO,EAAE,KAAK;QACd9F,MAAM,EAAE,IAAI;QACZwF,QAAQ,EAAEE;MACZ,CAAC,CAAC;MAEF,MAAM/F,MAAM,CAACC,OAAO,CAACC,KAAK,CAACU,GAAG,CAAC;QAC7B,cAAc,EAAEmF,aAAa;QAC7B,CAAC,YAAY,IAAI,CAACxE,iBAAiB,EAAE,GAAGwE;MAC1C,CAAC,CAAC;MAEF,MAAM,IAAI,CAACK,eAAe,CAACL,aAAa,CAAC;MACzC,OAAOA,aAAa;IAEtB,CAAC,CAAC,OAAO5I,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MACvC,MAAM,IAAI,CAACkJ,cAAc,CAAClJ,KAAK,CAAC;MAChC,MAAMA,KAAK;IACb,CAAC,SAAS;MACR,IAAI,CAACkE,kBAAkB,GAAG,KAAK;MAC/B,MAAM,IAAI,CAACC,aAAa,CAACL,KAAK,CAAC,CAAC;IAClC;EACF;EAEA,MAAMiF,oBAAoBA,CAACI,KAAK,EAAE;IAChC,IAAI;MACF,MAAMtG,MAAM,CAACC,OAAO,CAACC,KAAK,CAACU,GAAG,CAAC;QAC7B,eAAe,EAAE;UACf,GAAG0F,KAAK;UACR/F,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;QACpC;MACF,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOtD,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IAC3D;EACF;EAEA,MAAMoJ,iBAAiBA,CAAA,EAAG;IACxB,IAAI;MACF,MAAM;QAAEC;MAAc,CAAC,GAAG,MAAMxG,MAAM,CAACC,OAAO,CAACC,KAAK,CAACC,GAAG,CAAC,eAAe,CAAC;MACzE,IAAIqG,aAAa,EAAEjG,SAAS,EAAE;QAC5B;QACA,MAAMkG,YAAY,GAAG,CAAC,IAAIjG,IAAI,CAAC,CAAC,GAAG,IAAIA,IAAI,CAACgG,aAAa,CAACjG,SAAS,CAAC,IAAI,IAAI,GAAG,EAAE;QACjF,IAAIkG,YAAY,GAAG,CAAC,EAAE;UACpB,MAAMzG,MAAM,CAACC,OAAO,CAACC,KAAK,CAACgB,MAAM,CAAC,eAAe,CAAC;UAClD,OAAO,IAAI;QACb;QACA,OAAOsF,aAAa;MACtB;MACA,OAAO,IAAI;IACb,CAAC,CAAC,OAAOrJ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtD,OAAO,IAAI;IACb;EACF;EAEA2I,aAAaA,CAAC5H,IAAI,EAAE;IAClB,IAAI;MACF,MAAMG,MAAM,GAAG;QACbqI,KAAK,EAAE,CAAC;QACRC,YAAY,EAAE,EAAE;QAChBC,cAAc,EAAE,EAAE;QAClBC,SAAS,EAAE,EAAE;QACbC,eAAe,EAAE,EAAE;QACnBC,WAAW,EAAE,CAAC,CAAC;QACfC,WAAW,EAAE,EAAE;QACfC,eAAe,EAAE;MACnB,CAAC;MAED,MAAM9I,QAAQ,GAAGD,IAAI,CAACE,KAAK,CAAC,IAAI,CAAC;MACjCD,QAAQ,CAACS,OAAO,CAACsI,OAAO,IAAI;QAC1B,MAAM,CAACC,MAAM,EAAE,GAAGC,OAAO,CAAC,GAAGF,OAAO,CAAC9I,KAAK,CAAC,GAAG,CAAC;QAC/C,MAAMiJ,KAAK,GAAGD,OAAO,CAACE,IAAI,CAAC,GAAG,CAAC,CAACvI,IAAI,CAAC,CAAC;QAEtC,QAAQoI,MAAM,CAACpI,IAAI,CAAC,CAAC;UACnB,KAAK,iBAAiB;YACpBV,MAAM,CAACqI,KAAK,GAAGa,QAAQ,CAACF,KAAK,CAAC,IAAI,CAAC;YACnC;UACF,KAAK,eAAe;YAClBhJ,MAAM,CAACsI,YAAY,GAAGU,KAAK,CAACjJ,KAAK,CAAC,GAAG,CAAC,CAACoJ,GAAG,CAACC,CAAC,IAAIA,CAAC,CAAC1I,IAAI,CAAC,CAAC,CAAC;YACzD;UACF,KAAK,iBAAiB;YACpBV,MAAM,CAACuI,cAAc,GAAGS,KAAK,CAACjJ,KAAK,CAAC,GAAG,CAAC,CAACoJ,GAAG,CAACE,CAAC,IAAIA,CAAC,CAAC3I,IAAI,CAAC,CAAC,CAAC;YAC3D;UACF,KAAK,gBAAgB;YACnBV,MAAM,CAACwI,SAAS,GAAGQ,KAAK,CAACjJ,KAAK,CAAC,GAAG,CAAC,CAACoJ,GAAG,CAACG,CAAC,IAAIA,CAAC,CAAC5I,IAAI,CAAC,CAAC,CAAC;YACtD;UACF,KAAK,mBAAmB;YACtBV,MAAM,CAACyI,eAAe,GAAGO,KAAK,CAACjJ,KAAK,CAAC,GAAG,CAAC,CAACoJ,GAAG,CAACC,CAAC,IAAIA,CAAC,CAAC1I,IAAI,CAAC,CAAC,CAAC;YAC5D;UACF,KAAK,cAAc;YACjBV,MAAM,CAAC0I,WAAW,GAAG;cACnBa,OAAO,EAAEP,KAAK,CAACQ,WAAW,CAAC,CAAC,CAAC/I,QAAQ,CAAC,OAAO,CAAC;cAC9CgJ,YAAY,EAAET,KAAK,CAACQ,WAAW,CAAC,CAAC,CAAC/I,QAAQ,CAAC,YAAY,CAAC;cACxDiJ,YAAY,EAAEV,KAAK,CAACQ,WAAW,CAAC,CAAC,CAAC/I,QAAQ,CAAC,aAAa;YAC1D,CAAC;YACD;UACF,KAAK,cAAc;YACjBT,MAAM,CAAC2I,WAAW,GAAGK,KAAK,CAACjJ,KAAK,CAAC,GAAG,CAAC,CAACoJ,GAAG,CAACQ,CAAC,IAAIA,CAAC,CAACjJ,IAAI,CAAC,CAAC,CAAC;YACxD;UACF,KAAK,iBAAiB;YACpBV,MAAM,CAAC4I,eAAe,GAAGI,KAAK,CAACjJ,KAAK,CAAC,GAAG,CAAC,CAACoJ,GAAG,CAACS,CAAC,IAAIA,CAAC,CAAClJ,IAAI,CAAC,CAAC,CAAC;YAC5D;QACJ;MACF,CAAC,CAAC;MAEF,OAAOV,MAAM;IACf,CAAC,CAAC,OAAOlB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,MAAM,IAAI0E,KAAK,CAAC,kCAAkC,CAAC;IACrD;EACF;EAEA,MAAMwE,cAAcA,CAAClJ,KAAK,EAAE;IAC1B,IAAI;MACF,MAAM6C,MAAM,CAACc,OAAO,CAACC,WAAW,CAAC;QAC/BC,IAAI,EAAE,gBAAgB;QACtB7D,KAAK,EAAEA,KAAK,EAAEyC,OAAO,IAAIzC,KAAK,EAAE+K,QAAQ,CAAC,CAAC,IAAI;MAChD,CAAC,CAAC;IACJ,CAAC,CAAC,OAAO/K,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF;EAEA,MAAMiJ,eAAeA,CAACP,QAAQ,EAAE;IAChC,IAAI;MACF;MACA,MAAM7F,MAAM,CAACc,OAAO,CAACC,WAAW,CAAC;QAAEC,IAAI,EAAE;MAAO,CAAC,CAAC;MAClD;MACA,MAAMhB,MAAM,CAACc,OAAO,CAACC,WAAW,CAAC;QAC/BC,IAAI,EAAE,mBAAmB;QACzBmH,IAAI,EAAEtC;MACR,CAAC,CAAC;IACJ,CAAC,CAAC,OAAO1I,KAAK,EAAE;MACd;MACAC,OAAO,CAACkC,GAAG,CAAC,qCAAqC,CAAC;IACpD;EACF;EAEE,MAAM8I,oBAAoBA,CAACpE,GAAG,EAAE;IAC9B,IAAI;MACF,MAAM3F,MAAM,GAAG,MAAM2B,MAAM,CAACC,OAAO,CAACC,KAAK,CAACC,GAAG,CAAC,YAAY6D,GAAG,EAAE,CAAC;MAChE,OAAO3F,MAAM,CAAC,YAAY2F,GAAG,EAAE,CAAC,IAAI,IAAI;IAC1C,CAAC,CAAC,OAAO7G,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxD,OAAO,IAAI;IACb;EACF;EAEA,MAAMkL,aAAaA,CAACrE,GAAG,GAAG,IAAI,EAAE;IAC9B,IAAI;MACF,IAAIA,GAAG,EAAE;QACP,MAAMhE,MAAM,CAACC,OAAO,CAACC,KAAK,CAACgB,MAAM,CAAC,CAAC,YAAY8C,GAAG,EAAE,EAAE,cAAc,CAAC,CAAC;MACxE,CAAC,MAAM;QACL,MAAMsE,KAAK,GAAG,MAAMtI,MAAM,CAACC,OAAO,CAACC,KAAK,CAACC,GAAG,CAAC,IAAI,CAAC;QAClD,MAAMoI,YAAY,GAAGC,MAAM,CAACC,IAAI,CAACH,KAAK,CAAC,CAACI,MAAM,CAACC,GAAG,IAChDA,GAAG,CAACC,UAAU,CAAC,WAAW,CAAC,IAAID,GAAG,KAAK,cACzC,CAAC;QACD,MAAM3I,MAAM,CAACC,OAAO,CAACC,KAAK,CAACgB,MAAM,CAACqH,YAAY,CAAC;MACjD;MACA,MAAM,IAAI,CAACjH,aAAa,CAACL,KAAK,CAAC,CAAC;IAClC,CAAC,CAAC,OAAO9D,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF;EAEA8B,OAAOA,CAAA,EAAG;IACR,IAAI,IAAI,CAACvC,OAAO,EAAE;MAChB,IAAI,CAACA,OAAO,CAACuC,OAAO,CAAC,CAAC;MACtB,IAAI,CAACvC,OAAO,GAAG,IAAI;IACrB;IACA,IAAI,CAACC,WAAW,GAAG,KAAK;IACxB,IAAI,CAAC2E,aAAa,CAACL,KAAK,CAAC,CAAC;EAC5B;AACF;;AAEA;AACA,MAAM4H,sBAAsB,GAAG,IAAI1H,sBAAsB,CAAC,CAAC;AAC3D/D,OAAO,CAACkC,GAAG,CAAC,kCAAkC,CAAC;;AAE/C;AACAU,MAAM,CAACc,OAAO,CAACgI,SAAS,CAACC,WAAW,CAAC,CAACnJ,OAAO,EAAEoJ,MAAM,EAAEC,YAAY,KAAK;EACtE7L,OAAO,CAACkC,GAAG,CAAC,qCAAqC,EAAEM,OAAO,CAAC;EAE3D,QAAQA,OAAO,CAACoB,IAAI;IAClB,KAAK,qBAAqB;MACxB,CAAC,YAAY;QACX,IAAI;UACF,MAAMsF,KAAK,GAAG,MAAMuC,sBAAsB,CAACtC,iBAAiB,CAAC,CAAC;UAC9D0C,YAAY,CAAC;YAAEC,OAAO,EAAE,IAAI;YAAE5C;UAAM,CAAC,CAAC;QACxC,CAAC,CAAC,OAAOnJ,KAAK,EAAE;UACd8L,YAAY,CAAC;YAAEC,OAAO,EAAE,KAAK;YAAE/L,KAAK,EAAEA,KAAK,CAAC+K,QAAQ,CAAC;UAAE,CAAC,CAAC;QAC3D;MACF,CAAC,EAAE,CAAC;MACJ,OAAO,IAAI;IAEb,KAAK,iBAAiB;MACpB,CAAC,YAAY;QACX,IAAI;UACF,MAAMrC,QAAQ,GAAG,MAAMgD,sBAAsB,CAAC/E,cAAc,CAAClE,OAAO,CAACuI,IAAI,CAAC;UAC1Ec,YAAY,CAAC;YAAEC,OAAO,EAAE,IAAI;YAAEf,IAAI,EAAEtC;UAAS,CAAC,CAAC;QACjD,CAAC,CAAC,OAAO1I,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;UACxC8L,YAAY,CAAC;YAAEC,OAAO,EAAE,KAAK;YAAE/L,KAAK,EAAEA,KAAK,CAAC+K,QAAQ,CAAC;UAAE,CAAC,CAAC;QAC3D;MACF,CAAC,EAAE,CAAC;MACJ,OAAO,IAAI;IAEb,KAAK,cAAc;MACjB,CAAC,YAAY;QACX,IAAI;UACF,MAAM7J,MAAM,GAAG,MAAMwK,sBAAsB,CAACT,oBAAoB,CAACxI,OAAO,CAACoE,GAAG,CAAC;UAC7EiF,YAAY,CAAC;YAAEC,OAAO,EAAE,IAAI;YAAEf,IAAI,EAAE9J;UAAO,CAAC,CAAC;QAC/C,CAAC,CAAC,OAAOlB,KAAK,EAAE;UACd8L,YAAY,CAAC;YAAEC,OAAO,EAAE,KAAK;YAAE/L,KAAK,EAAEA,KAAK,CAAC+K,QAAQ,CAAC;UAAE,CAAC,CAAC;QAC3D;MACF,CAAC,EAAE,CAAC;MACR,OAAO,IAAI;IAET,KAAK,gBAAgB;MACnB,CAAC,YAAY;QACX,IAAI;UACF,MAAMW,sBAAsB,CAACR,aAAa,CAACzI,OAAO,CAACoE,GAAG,CAAC;UACvDiF,YAAY,CAAC;YAAEC,OAAO,EAAE;UAAK,CAAC,CAAC;QACjC,CAAC,CAAC,OAAO/L,KAAK,EAAE;UACd8L,YAAY,CAAC;YAAEC,OAAO,EAAE,KAAK;YAAE/L,KAAK,EAAEA,KAAK,CAAC+K,QAAQ,CAAC;UAAE,CAAC,CAAC;QAC3D;MACF,CAAC,EAAE,CAAC;MACJ,OAAO,IAAI;IAEb,KAAK,oBAAoB;MACvB,CAAC,YAAY;QACX,IAAI;UACF,MAAMW,sBAAsB,CAACjM,UAAU,CAAC,CAAC;UACzCqM,YAAY,CAAC;YAAEC,OAAO,EAAE;UAAK,CAAC,CAAC;QACjC,CAAC,CAAC,OAAO/L,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;UACrD8L,YAAY,CAAC;YAAEC,OAAO,EAAE,KAAK;YAAE/L,KAAK,EAAEA,KAAK,CAAC+K,QAAQ,CAAC;UAAE,CAAC,CAAC;QAC3D;MACF,CAAC,EAAE,CAAC;MACJ,OAAO,IAAI;EACf;EAEA,OAAO,KAAK;AACd,CAAC,CAAC;;AAEF;AACAlI,MAAM,CAACc,OAAO,CAACqI,WAAW,CAACJ,WAAW,CAAC,MAAOzI,OAAO,IAAK;EACxD,IAAIA,OAAO,CAAC8I,MAAM,KAAK,SAAS,EAAE;IAChC,IAAI;MACF,MAAMP,sBAAsB,CAACjM,UAAU,CAAC,CAAC;MACzCQ,OAAO,CAACkC,GAAG,CAAC,iDAAiD,CAAC;IAChE,CAAC,CAAC,OAAOnC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gDAAgD,EAAEA,KAAK,CAAC;IACxE;EACF;AACF,CAAC,CAAC;AAEF6C,MAAM,CAACc,OAAO,CAACuI,SAAS,CAACN,WAAW,CAAC,MAAM;EACzC3L,OAAO,CAACkC,GAAG,CAAC,sCAAsC,CAAC;EACnD,IAAIuJ,sBAAsB,EAAE;IAC1BA,sBAAsB,CAAC5J,OAAO,CAAC,CAAC;EAClC;AACF,CAAC,CAAC,C","sources":["webpack://smart-fit/./src/services/dietaryAdvisor.js","webpack://smart-fit/webpack/bootstrap","webpack://smart-fit/webpack/runtime/define property getters","webpack://smart-fit/webpack/runtime/hasOwnProperty shorthand","webpack://smart-fit/webpack/runtime/make namespace object","webpack://smart-fit/./src/background/background.js"],"sourcesContent":["class DietaryAdvisor {\n  constructor() {\n    this.session = null;\n    this.initialized = false;\n  }\n\n  async initialize() {\n    if (this.initialized) return;\n\n    try {\n      this.session = await ai.languageModel.create({\n        systemPrompt: `You are a nutrition and dietary expert. Your role is to:\n1. Analyze food items for potential allergens and intolerances\n2. Suggest alternative foods that provide similar nutritional benefits\n3. Explain potential health implications\n4. Provide scientific explanations when relevant\n\nFormat responses as follows:\nCONCERNS: [List potential health concerns]\nEFFECTS: [Describe potential effects]\nALTERNATIVES: [List alternative foods]`,\n        temperature: 0.3,\n        topK: 1\n      });\n\n      this.initialized = true;\n    } catch (error) {\n      console.error('Failed to initialize dietary advisor:', error);\n      throw error;\n    }\n  }\n\n  async getAdvice(food, userProfile) {\n    try {\n      if (!this.initialized) await this.initialize();\n\n      const prompt = `Analyze this food item: \"${food.title}\"\nUser's dietary concerns: ${JSON.stringify(userProfile.restrictions || [])}\nAllergies: ${JSON.stringify(userProfile.allergies || [])}\nIntolerances: ${JSON.stringify(userProfile.intolerances || [])}\n\nConsider the ingredients and nutrition content: ${JSON.stringify(food.nutritionData)}\nProvide detailed advice about health implications and alternatives.`;\n\n      const response = await this.session.prompt(prompt);\n      return this.parseAdvice(response);\n    } catch (error) {\n      console.error('Failed to get dietary advice:', error);\n      throw error;\n    }\n  }\n\n  parseAdvice(text) {\n    const sections = text.split('\\n');\n    const result = {\n      concerns: [],\n      effects: [],\n      alternatives: [],\n      nutritionMatch: [],\n      preparationTips: []\n    };\n\n    let currentSection = '';\n    sections.forEach(line => {\n      if (line.includes('CONCERNS:')) {\n        currentSection = 'concerns';\n      } else if (line.includes('EFFECTS:')) {\n        currentSection = 'effects';\n      } else if (line.includes('ALTERNATIVES:')) {\n        currentSection = 'alternatives';\n      } else if (line.trim() && currentSection) {\n        result[currentSection].push(line.trim());\n      }\n    });\n\n    return result;\n  }\n\n  destroy() {\n    if (this.session) {\n      this.session.destroy();\n      this.session = null;\n    }\n    this.initialized = false;\n  }\n}\n\nexport default new DietaryAdvisor();","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import dietaryAdvisor from '../services/dietaryAdvisor.js';\n\n// Initialize listeners\nself.oninstall = (event) => {\n  console.log('Service Worker installing...');\n};\n\nself.onactivate = (event) => {\n  console.log('Service Worker activating...');\n};\n\nclass StatusManager {\n  constructor() {\n    this.currentStatus = null;\n    this.steps = [\n      { step: 'init', message: 'Initializing analysis...' },\n      { step: 'extracting', message: 'Extracting product information...' },\n      { step: 'nutrition', message: 'Processing nutrition facts...' },\n      { step: 'ingredients', message: 'Analyzing ingredients...' },\n      { step: 'health', message: 'Evaluating health factors...' },\n      { step: 'alternatives', message: 'Finding nutritional alternatives...' },\n      { step: 'allergens', message: 'Checking allergens and intolerances...' },\n      { step: 'safety', message: 'Evaluating product safety...' },\n      { step: 'effects', message: 'Analyzing health effects...' },\n      { step: 'claims', message: 'Verifying product claims...' },\n      { step: 'calculating', message: 'Calculating overall scores...' },\n      { step: 'recommendations', message: 'Generating recommendations...' }\n    ];\n    this.stepIndex = 0;\n    this.loadStatus();\n  }\n\n  async loadStatus() {\n    try {\n      const { analysisStatus } = await chrome.storage.local.get('analysisStatus');\n      if (analysisStatus) {\n        this.currentStatus = analysisStatus;\n        this.stepIndex = analysisStatus.stepIndex || 0;\n      }\n    } catch (error) {\n      console.error('Error loading status:', error);\n    }\n  }\n\n  async updateStatus(status, details = null) {\n    this.currentStatus = {\n      step: this.steps[this.stepIndex]?.step || 'unknown',\n      message: this.steps[this.stepIndex]?.message || 'Processing...',\n      details: details,\n      timestamp: new Date().toISOString(),\n      stepIndex: this.stepIndex,\n      totalSteps: this.steps.length\n    };\n\n    try {\n      await chrome.storage.local.set({ 'analysisStatus': this.currentStatus });\n      await this.broadcastStatus();\n      this.stepIndex = (this.stepIndex + 1) % this.steps.length;\n    } catch (error) {\n      console.error('Error updating status:', error);\n    }\n  }\n\n  async broadcastStatus() {\n    if (this.currentStatus) {\n      try {\n        await chrome.runtime.sendMessage({\n          type: 'ANALYSIS_STATUS',\n          status: this.currentStatus\n        });\n      } catch (error) {\n        console.log('No listeners for status update');\n      }\n    }\n  }\n\n  async reset() {\n    this.stepIndex = 0;\n    this.currentStatus = null;\n    try {\n      await chrome.storage.local.remove('analysisStatus');\n      await this.broadcastStatus();\n    } catch (error) {\n      console.error('Error resetting status:', error);\n    }\n  }\n}\n\nclass ProductAnalysisService {\n  constructor() {\n    this.initialized = false;\n    this.summarizer = null;\n    this.analysisInProgress = false;\n    this.statusManager = new StatusManager();\n    this.currentProductUrl = null;\n    this.nutritionixConfig = {\n      appId: 'faee4d9c',\n      apiKey: '2b057e15ced740df73d36166de052ef8'\n    };\n  }\n\n  async initialize() {\n    try {\n      if (this.initialized) return true;\n\n      console.log(\"Initializing product analysis service...\");\n      const capabilities = await ai.languageModel.capabilities();\n\n      if (capabilities.available === 'no') {\n        throw new Error('Language model not available');\n      }\n\n      // Initialize with enhanced prompt for better health analysis\n      this.session = await ai.languageModel.create({\n        systemPrompt: `You are a nutrition and dietary expert analyzing food products and their nutritional labels. Your task is to:\n1. Evaluate nutrition facts and provide clear insights\n2. Identify potential allergens, intolerances, and health concerns\n3. Provide detailed health implications and effects\n4. Consider dietary restrictions and preferences\n5. Suggest alternative foods with similar nutritional profiles\n6. Provide preparation tips for healthier consumption\n\nAlways respond in exactly this format:\nNUTRITION SCORE: [0-100]\nKEY NUTRIENTS: [List important nutrients]\nHEALTH INSIGHTS: [Key health considerations]\nALLERGEN ALERT: [List potential allergens]\nHEALTH EFFECTS: [Short and long-term health effects]\nINGREDIENTS NOTES: [Notable ingredient information]\nDIETARY INFO: [Vegan/Vegetarian/Gluten-free status]\nALTERNATIVES: [List of alternative foods with similar nutrition]\nLABEL CLAIMS: [Evaluate any health claims]\nRECOMMENDATIONS: [Suggestions for healthier choices]`,\n        temperature: 0.3,\n        topK: 1\n      });\n\n      // Initialize dietary advisor\n      await dietaryAdvisor.initialize();\n\n      this.initialized = true;\n      return true;\n    } catch (error) {\n      console.error(\"Failed to initialize:\", error);\n      throw error;\n    }\n  }\n\n  async getNutritionixData(query) {\n    try {\n      console.log('Calling Nutritionix API for:', query);\n\n      const searchUrl = `https://trackapi.nutritionix.com/v2/search/instant?query=${encodeURIComponent(query)}`;\n      const searchResponse = await fetch(searchUrl, {\n        method: 'GET',\n        headers: {\n          'x-app-id': this.nutritionixConfig.appId,\n          'x-app-key': this.nutritionixConfig.apiKey,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (!searchResponse.ok) {\n        throw new Error(`Nutritionix search failed: ${searchResponse.status}`);\n      }\n\n      const searchData = await searchResponse.json();\n      const bestMatch = searchData.branded?.[0] || searchData.common?.[0];\n\n      if (!bestMatch) {\n        console.log('No matches found');\n        return null;\n      }\n\n      const nutrientsResponse = await fetch('https://trackapi.nutritionix.com/v2/natural/nutrients', {\n        method: 'POST',\n        headers: {\n          'x-app-id': this.nutritionixConfig.appId,\n          'x-app-key': this.nutritionixConfig.apiKey,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: bestMatch.food_name\n        })\n      });\n\n      if (!nutrientsResponse.ok) {\n        throw new Error(`Nutritionix nutrients failed: ${nutrientsResponse.status}`);\n      }\n\n      const nutrientsData = await nutrientsResponse.json();\n\n      return {\n        item: {\n          name: bestMatch.food_name,\n          brand: bestMatch.brand_name || 'Generic',\n          serving: {\n            quantity: bestMatch.serving_qty,\n            unit: bestMatch.serving_unit\n          },\n          photo: bestMatch.photo?.thumb\n        },\n        search_query: query,\n        nutrition: nutrientsData.foods?.[0] || null\n      };\n\n    } catch (error) {\n      console.error('Nutritionix API error:', error);\n      throw error;\n    }\n  }\n\n async analyzeProduct(productData) {\n    if (this.analysisInProgress) {\n      throw new Error('Analysis already in progress');\n    }\n\n    this.currentProductUrl = productData.url;\n\n    try {\n      this.analysisInProgress = true;\n      this.statusManager.updateStatus('init');\n\n      if (!this.initialized) {\n        await this.initialize();\n      }\n\n      // Get user preferences and nutrition data\n      const [{ userPreferences }, nutritionixData] = await Promise.all([\n        chrome.storage.local.get('userPreferences'),\n        this.getNutritionixData(productData.title)\n      ]);\n\n      this.statusManager.updateStatus('nutrition');\n\n      // Format nutrition data\n      const nutrition = nutritionixData?.nutrition;\n      const formattedNutrition = {\n        calories: nutrition?.nf_calories,\n        protein: nutrition?.nf_protein,\n        carbs: nutrition?.nf_total_carbohydrate,\n        fat: nutrition?.nf_total_fat,\n        fiber: nutrition?.nf_dietary_fiber,\n        sodium: nutrition?.nf_sodium,\n        sugars: nutrition?.nf_sugars,\n        cholesterol: nutrition?.nf_cholesterol,\n        potassium: nutrition?.nf_potassium,\n        saturatedFat: nutrition?.nf_saturated_fat\n      };\n\n      // Get dietary advice\n      this.statusManager.updateStatus('health');\n      const dietaryAdvice = await dietaryAdvisor.getAdvice(\n        {\n          title: productData.title,\n          nutritionData: formattedNutrition\n        },\n        userPreferences\n      );\n\n      // Create enhanced analysis prompt\n      const prompt = `Analyze this product's nutrition information:\n\nProduct: ${productData.title}\nBrand: ${productData.brand || nutritionixData?.item?.brand}\nCategory: ${productData.category}\n\nNutrition Facts (per serving):\n- Calories: ${formattedNutrition.calories?.toFixed(1) || 'N/A'} kcal\n- Protein: ${formattedNutrition.protein?.toFixed(1) || 'N/A'}g\n- Carbohydrates: ${formattedNutrition.carbs?.toFixed(1) || 'N/A'}g\n- Total Fat: ${formattedNutrition.fat?.toFixed(1) || 'N/A'}g\n- Saturated Fat: ${formattedNutrition.saturatedFat?.toFixed(1) || 'N/A'}g\n- Fiber: ${formattedNutrition.fiber?.toFixed(1) || 'N/A'}g\n- Sodium: ${formattedNutrition.sodium?.toFixed(1) || 'N/A'}mg\n- Sugars: ${formattedNutrition.sugars?.toFixed(1) || 'N/A'}g\n- Cholesterol: ${formattedNutrition.cholesterol?.toFixed(1) || 'N/A'}mg\n- Potassium: ${formattedNutrition.potassium?.toFixed(1) || 'N/A'}mg\n\nUser Dietary Preferences: ${JSON.stringify(userPreferences || {})}\nHealth Concerns: ${JSON.stringify(dietaryAdvice.concerns || [])}\n\nProvide a comprehensive analysis based on this data.`;\n\n      this.statusManager.updateStatus('analyzing');\n      const analysis = await this.session.prompt(prompt);\n\n      this.statusManager.updateStatus('finalizing');\n      const result = this.parseAnalysis(analysis);\n\n      const finalAnalysis = {\n        ...result,\n        productInfo: {\n          title: productData.title,\n          brand: productData.brand || nutritionixData?.item?.brand,\n          category: productData.category\n        },\n        nutritionData: formattedNutrition,\n        nutritionixData,\n        healthAdvisory: dietaryAdvice,\n        timestamp: new Date().toISOString(),\n        url: this.currentProductUrl\n      };\n\n      // Persist analysis state\n      await this.persistAnalysisState({\n        loading: false,\n        status: null,\n        analysis: finalAnalysis\n      });\n\n      await chrome.storage.local.set({\n        'lastAnalysis': finalAnalysis,\n        [`analysis_${this.currentProductUrl}`]: finalAnalysis\n      });\n\n      await this.broadcastResult(finalAnalysis);\n      return finalAnalysis;\n\n    } catch (error) {\n      console.error(\"Analysis error:\", error);\n      await this.broadcastError(error);\n      throw error;\n    } finally {\n      this.analysisInProgress = false;\n      await this.statusManager.reset();\n    }\n  }\n\n  async persistAnalysisState(state) {\n    try {\n      await chrome.storage.local.set({\n        'analysisState': {\n          ...state,\n          timestamp: new Date().toISOString()\n        }\n      });\n    } catch (error) {\n      console.error('Failed to persist analysis state:', error);\n    }\n  }\n\n  async getPersistedState() {\n    try {\n      const { analysisState } = await chrome.storage.local.get('analysisState');\n      if (analysisState?.timestamp) {\n        // Clear state if it's older than 5 minutes\n        const ageInMinutes = (new Date() - new Date(analysisState.timestamp)) / 1000 / 60;\n        if (ageInMinutes > 5) {\n          await chrome.storage.local.remove('analysisState');\n          return null;\n        }\n        return analysisState;\n      }\n      return null;\n    } catch (error) {\n      console.error('Failed to get persisted state:', error);\n      return null;\n    }\n  }\n\n  parseAnalysis(text) {\n    try {\n      const result = {\n        score: 0,\n        keyNutrients: [],\n        healthInsights: [],\n        allergens: [],\n        ingredientNotes: [],\n        dietaryInfo: {},\n        labelClaims: [],\n        recommendations: []\n      };\n\n      const sections = text.split('\\n');\n      sections.forEach(section => {\n        const [header, ...content] = section.split(':');\n        const value = content.join(':').trim();\n\n        switch (header.trim()) {\n          case 'NUTRITION SCORE':\n            result.score = parseInt(value) || 0;\n            break;\n          case 'KEY NUTRIENTS':\n            result.keyNutrients = value.split(',').map(n => n.trim());\n            break;\n          case 'HEALTH INSIGHTS':\n            result.healthInsights = value.split(',').map(i => i.trim());\n            break;\n          case 'ALLERGEN ALERT':\n            result.allergens = value.split(',').map(a => a.trim());\n            break;\n          case 'INGREDIENTS NOTES':\n            result.ingredientNotes = value.split(',').map(n => n.trim());\n            break;\n          case 'DIETARY INFO':\n            result.dietaryInfo = {\n              isVegan: value.toLowerCase().includes('vegan'),\n              isVegetarian: value.toLowerCase().includes('vegetarian'),\n              isGlutenFree: value.toLowerCase().includes('gluten-free')\n            };\n            break;\n          case 'LABEL CLAIMS':\n            result.labelClaims = value.split(',').map(c => c.trim());\n            break;\n          case 'RECOMMENDATIONS':\n            result.recommendations = value.split(',').map(r => r.trim());\n            break;\n        }\n      });\n\n      return result;\n    } catch (error) {\n      console.error('Error parsing analysis:', error);\n      throw new Error('Failed to parse analysis results');\n    }\n  }\n\n  async broadcastError(error) {\n    try {\n      await chrome.runtime.sendMessage({\n        type: 'ANALYSIS_ERROR',\n        error: error?.message || error?.toString() || 'Unknown error'\n      });\n    } catch (error) {\n      console.error('Error broadcasting error:', error);\n    }\n  }\n\n  async broadcastResult(analysis) {\n  try {\n    // Check if popup is open by sending a test message\n    await chrome.runtime.sendMessage({ type: 'PING' });\n    // If we get here, popup is open, send the real message\n    await chrome.runtime.sendMessage({\n      type: 'ANALYSIS_COMPLETE',\n      data: analysis\n    });\n  } catch (error) {\n    // Popup is closed, ignore the error\n    console.log('Popup is closed, skipping broadcast');\n  }\n}\n\n  async loadPreviousAnalysis(url) {\n    try {\n      const result = await chrome.storage.local.get(`analysis_${url}`);\n      return result[`analysis_${url}`] || null;\n    } catch (error) {\n      console.error('Error loading previous analysis:', error);\n      return null;\n    }\n  }\n\n  async clearAnalysis(url = null) {\n    try {\n      if (url) {\n        await chrome.storage.local.remove([`analysis_${url}`, 'lastAnalysis']);\n      } else {\n        const items = await chrome.storage.local.get(null);\n        const keysToRemove = Object.keys(items).filter(key =>\n          key.startsWith('analysis_') || key === 'lastAnalysis'\n        );\n        await chrome.storage.local.remove(keysToRemove);\n      }\n      await this.statusManager.reset();\n    } catch (error) {\n      console.error('Error clearing analysis:', error);\n    }\n  }\n\n  destroy() {\n    if (this.session) {\n      this.session.destroy();\n      this.session = null;\n    }\n    this.initialized = false;\n    this.statusManager.reset();\n  }\n}\n\n// Initialize service\nconst productAnalysisService = new ProductAnalysisService();\nconsole.log('Product Analysis Service created');\n\n// Handle messages\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n  console.log(\"Background script received message:\", message);\n\n  switch (message.type) {\n    case 'GET_PERSISTED_STATE':\n      (async () => {\n        try {\n          const state = await productAnalysisService.getPersistedState();\n          sendResponse({ success: true, state });\n        } catch (error) {\n          sendResponse({ success: false, error: error.toString() });\n        }\n      })();\n      return true;\n\n    case 'ANALYZE_PRODUCT':\n      (async () => {\n        try {\n          const analysis = await productAnalysisService.analyzeProduct(message.data);\n          sendResponse({ success: true, data: analysis });\n        } catch (error) {\n          console.error(\"Analysis failed:\", error);\n          sendResponse({ success: false, error: error.toString() });\n        }\n      })();\n      return true;\n\n    case 'GET_ANALYSIS':\n      (async () => {\n        try {\n          const result = await productAnalysisService.loadPreviousAnalysis(message.url);\n          sendResponse({ success: true, data: result });\n        } catch (error) {\n          sendResponse({ success: false, error: error.toString() });\n        }\n      })();\n  return true;\n\n    case 'CLEAR_ANALYSIS':\n      (async () => {\n        try {\n          await productAnalysisService.clearAnalysis(message.url);\n          sendResponse({ success: true });\n        } catch (error) {\n          sendResponse({ success: false, error: error.toString() });\n        }\n      })();\n      return true;\n\n    case 'INITIALIZE_SERVICE':\n      (async () => {\n        try {\n          await productAnalysisService.initialize();\n          sendResponse({ success: true });\n        } catch (error) {\n          console.error('Failed to initialize service:', error);\n          sendResponse({ success: false, error: error.toString() });\n        }\n      })();\n      return true;\n  }\n\n  return false;\n});\n\n// Handle installation and cleanup\nchrome.runtime.onInstalled.addListener(async (details) => {\n  if (details.reason === 'install') {\n    try {\n      await productAnalysisService.initialize();\n      console.log(\"Product analysis service initialized on install\");\n    } catch (error) {\n      console.error('Failed to initialize product analysis service:', error);\n    }\n  }\n});\n\nchrome.runtime.onSuspend.addListener(() => {\n  console.log(\"Extension suspending, cleaning up...\");\n  if (productAnalysisService) {\n    productAnalysisService.destroy();\n  }\n});"],"names":["DietaryAdvisor","constructor","session","initialized","initialize","ai","languageModel","create","systemPrompt","temperature","topK","error","console","getAdvice","food","userProfile","prompt","title","JSON","stringify","restrictions","allergies","intolerances","nutritionData","response","parseAdvice","text","sections","split","result","concerns","effects","alternatives","nutritionMatch","preparationTips","currentSection","forEach","line","includes","trim","push","destroy","dietaryAdvisor","self","oninstall","event","log","onactivate","StatusManager","currentStatus","steps","step","message","stepIndex","loadStatus","analysisStatus","chrome","storage","local","get","updateStatus","status","details","timestamp","Date","toISOString","totalSteps","length","set","broadcastStatus","runtime","sendMessage","type","reset","remove","ProductAnalysisService","summarizer","analysisInProgress","statusManager","currentProductUrl","nutritionixConfig","appId","apiKey","capabilities","available","Error","getNutritionixData","query","searchUrl","encodeURIComponent","searchResponse","fetch","method","headers","ok","searchData","json","bestMatch","branded","common","nutrientsResponse","body","food_name","nutrientsData","item","name","brand","brand_name","serving","quantity","serving_qty","unit","serving_unit","photo","thumb","search_query","nutrition","foods","analyzeProduct","productData","url","userPreferences","nutritionixData","Promise","all","formattedNutrition","calories","nf_calories","protein","nf_protein","carbs","nf_total_carbohydrate","fat","nf_total_fat","fiber","nf_dietary_fiber","sodium","nf_sodium","sugars","nf_sugars","cholesterol","nf_cholesterol","potassium","nf_potassium","saturatedFat","nf_saturated_fat","dietaryAdvice","category","toFixed","analysis","parseAnalysis","finalAnalysis","productInfo","healthAdvisory","persistAnalysisState","loading","broadcastResult","broadcastError","state","getPersistedState","analysisState","ageInMinutes","score","keyNutrients","healthInsights","allergens","ingredientNotes","dietaryInfo","labelClaims","recommendations","section","header","content","value","join","parseInt","map","n","i","a","isVegan","toLowerCase","isVegetarian","isGlutenFree","c","r","toString","data","loadPreviousAnalysis","clearAnalysis","items","keysToRemove","Object","keys","filter","key","startsWith","productAnalysisService","onMessage","addListener","sender","sendResponse","success","onInstalled","reason","onSuspend"],"sourceRoot":""}